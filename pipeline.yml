resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final
- name: file-url
  type: docker-image
  source:
    repository: pivotalservices/concourse-curl-resource
    tag: latest

resources:
- name: ubuntu-image
  type: docker-image
  source:
    repository: ubuntu
  
- name: pipeline-resources
  type: git
  source:
    uri: ((tasks.uri))
    branch: master
    #username: ((tasks.username))
    #password: ((tasks.password))
    #skip_ssl_verification: true

- name: stembuild-release
  type: pivnet
  source:
    api_token: ((pivnet-token))
    product_slug: stemcells-windows-server
    product_version: ((os-version)).(.*)
    sort_by: semver

#- name: stembuild-release
#  type: github-release
#  source:
#    owner: cloudfoundry-incubator
#    repository: stembuild
#    tag_filter: ((os-version)).(.*)

- name: govc
  type: github-release
  source:
    owner: vmware
    repository: govmomi
    tag_filter: 0.21.(.*)

- name: lgpo
  type: file-url
  source:
    url: https://download.microsoft.com/download/8/5/C/85C25433-A1B0-4FFA-9429-7E023E7DA8D8/LGPO.zip
    filename: LGPO.zip

- name: autounattend
  type: git
  source:
    uri: ((tasks.uri))
    branch: master
    #username: ((tasks.username))
    #password: ((tasks.password))
    #skip_ssl_verification: true

- name: stemcell-store
  type: s3
  source:
  source:
    access_key_id: ((s3.access-key-id))
    secret_access_key: ((s3.secret-access-key))
    bucket: ((s3.bucket))
    versioned_file: stemcell/bosh-stemcell-2019.12-vsphere-esxi-windows2019-go_agent.tgz
    endpoint: ((s3.endpoint))

vcenter-params: &vcenter-params
  vcenter_ca_certs: ((vcenter-ca-certs))
  vcenter_url: ((vcenter-url))
  vcenter_username: ((vcenter-username))
  vcenter_password: ((vcenter-password))
  vcenter_datacenter: ((vcenter-datacenter))

vm-params: &vm-params
  base_vm_name: ((base-vm-name))
  vm_folder: ((vm-folder))
  vm_datastore: ((vm-datastore))
  vm_host: ((vm-host))
  vm_cpu: ((vm-cpu))
  vm_network: ((vm-network))
  vm_disk_gb: ((vm-disk-gb))
  vm_memory_mb: ((vm-memory-mb))
  vm_guest_os_id: ((vm-guest-os-id))
  vm_net_adapter: ((vm-net-adapter))
  vm_resource_pool: ((vm-resource-pool))
  esxi_version: ((esxi-version))
  firmware_type: ((firmware-type))
  disk_controller_type: ((disk-controller-type))
  iso_datastore: ((iso-datastore))
  iso_path_in_datastore: ((iso-path-in-datastore))

os-params: &os-params
  operating_system_name: ((operating-system-name))
  ip_address: ((ip-address))
  language: ((language))
  gateway_address: ((gateway-address))
  dns_address: ((dns-address))
  admin_password: ((admin-password))
  oobe_unattend_uri: ((oobe-unattend-uri))
  vmware_tools_uri: ((vmware-tools-uri))
  windows_update_module_uri: ((windows-update-module-uri))

######################

jobs:
  - name: create-base
    plan:
      - get: ubuntu-image
      - get: pipeline-resources
      - get: govc
        params:
          globs:
            - govc_linux_amd64.gz
      - get: autounattend
      - task: create-base
        file: pipeline-resources/tasks/create-base.yml
        image: ubuntu-image
        input_mapping:
          govc: govc
          autounattend: autounattend
          pipeline-resources: pipeline-resources
        params:
          <<: *vcenter-params
          <<: *vm-params
          <<: *os-params

  - name: update-base
    plan:
      - get: ubuntu-image
      - get: pipeline-resources
      - get: govc
        params:
          globs:
            - govc_linux_amd64.gz
      - get: stembuild-release
        #trigger: true #start the pipeline whenever there is a new stembuild
        params:
          globs:
            - stembuild-linux-*
      - task: update-base
        file: pipeline-resources/tasks/update-base.yml
        image: ubuntu-image
        input_mapping:
          govc: govc
          pipeline-resources: pipeline-resources
        params:
          <<: *vcenter-params
          <<: *os-params

  - name: clone-base
    plan:
      - get: ubuntu-image
      - get: pipeline-resources
        trigger: true
        passed: [create-base]
      - get: govc
        params:
          globs:
            - govc_linux_amd64.gz
      - get: stembuild-release
        params:
          globs:
            - stembuild-linux-*
      - task: clone-base
        file: pipeline-resources/tasks/clone-base.yml
        image: ubuntu-image
        input_mapping:
          govc: govc
          stembuild: stembuild-release
          pipeline-resources: pipeline-resources
        params:
          <<: *vcenter-params
          <<: *vm-params
        
  - name: construct
    plan:
      - get: ubuntu-image
      - get: pipeline-resources
        trigger: true
        passed: [clone-base]
      - get: lgpo
      - get: govc
        params:
          globs:
            - govc_linux_amd64.gz
      - get: stembuild-release
        params:
          globs:
            - stembuild-linux-*
      - task: construct
        file: pipeline-resources/tasks/construct.yml
        image: ubuntu-image
        input_mapping:
          stembuild: stembuild-release
          lgpo: lgpo
          govc: govc
          pipeline-resources: pipeline-resources
        params:
          <<: *vcenter-params
          <<: *vm-params
          <<: *os-params

  - name: package
    plan:
      - get: ubuntu-image
      - get: pipeline-resources
        trigger: true
        passed: [construct]
      - get: govc
        params:
          globs:
            - govc_linux_amd64.gz
      - get: stembuild-release
        params:
          globs:
            - stembuild-linux-*
      - task: package
        file: pipeline-resources/tasks/package.yml
        image: ubuntu-image
        input_mapping:
          stembuild: stembuild-release
          govc: govc
          pipeline-resources: pipeline-resources
        params:
          <<: *vcenter-params
          <<: *vm-params
          <<: *os-params
      - put: stemcell-store
        params:
          file: stemcell/*.tgz
